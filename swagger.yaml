openapi: 3.0.1
info:
  title: API de Pinapp
  version: 1.0.0
servers:
  - url: https://2ujgjzhsmb.execute-api.us-east-1.amazonaws.com/Prod
    description: Prod server
  - url: https://localhost:3000
    description: Local server
tags:
  - name: Auth
    description: Operaciones para autenticación en el API
  - name: Clients
    description: Operaciones relacionadas con clientes
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Iniciar sesión
      description: Valida las credenciales y devuelve un token JWT si son correctas.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: Autenticación exitosa
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Credenciales inválidas
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /clients:
    get:
      tags:
        - Clients
      summary: Listar clientes
      description: "Obtiene una lista paginada de clientes. Soporta parámetros como\
        \ `page`, `size` y `sort`."
      operationId: retrieve
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Pageable"
      responses:
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: Listado exitoso de clientes
          content:
            application/json: {}
      security:
        - bearerAuth: []
    post:
      tags:
        - Clients
      summary: Crear un nuevo cliente
      description: Crea un nuevo cliente a partir de los datos enviados en el cuerpo
        de la solicitud.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientRequest"
        required: true
      responses:
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "201":
          description: Cliente creado exitosamente
          content:
            application/json: {}
        "400":
          description: Solicitud inválida (errores de validación)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - bearerAuth: []
  /clients/stats:
    get:
      tags:
        - Clients
      summary: Obtener estadísticas de edad de clientes
      description: Calcula y devuelve estadísticas como la edad promedio y la desviación
        estándar de todos los clientes.
      operationId: retrieveStats
      responses:
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: Estadísticas obtenidas correctamente
          content:
            application/json: {}
      security:
        - bearerAuth: []
components:
  schemas:
    AuthRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 3
          type: string
        password:
          maxLength: 50
          minLength: 6
          type: string
    AuthResponse:
      type: object
      properties:
        token:
          type: string
    ClientRequest:
      required:
        - birthDate
        - firstName
        - lastName
        - sex
      type: object
      properties:
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        sex:
          type: string
          enum:
            - MALE
            - FEMALE
        birthDate:
          type: string
          format: date
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        messages:
          type: array
          items:
            type: string
        path:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
